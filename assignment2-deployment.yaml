apiVersion: v1
# Nice thing about Namespace usage: we can just delete the entire set of things around a set,
# if they're in a namespace by deleting the Namespace.
kind: Namespace 
metadata:
  name: aryan20
  labels:
    name: aryan20
---
apiVersion: v1
kind: Secret
metadata:
   name: set-secret
   namespace: aryan20
data:
   # dot at the front is important, but will not be part of the API name to recall it.
   .secretValue: c2VjcmV0U25ha2U=
   # secretValue should be "secretSnake" in its current base64 encoding.
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: save-storage
  namespace: aryan20
spec:
  capacity:
    storage: 1Ki
  #volumeMode: Filesystem #default Filesystem anyways
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "E:/comp4016_docker/volumes/"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app
          operator: In
          values:
          - comp4016-docker-assignment
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: save-storage-claim
  namespace: aryan20
spec:
  accessModes:
    - ReadWriteOnce
  #volumeMode: Filesystem
  resources:
    requests:
      storage: 1Ki
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: assignment03-set
  namespace: aryan20
  labels:
    app: comp4016-docker-assignment
spec:
  #replicas: 3 # Not needed with HorizontalPodAutoscaler
  selector:
    matchLabels:
      app: comp4016-docker-assignment
  template:
    metadata:
      labels:
        app: comp4016-docker-assignment
    spec:
      containers:
        - name: assigment02
          image: mt1st/comp4016_assignment1_jboss_with_maven:assignment3
          ports:
          - containerPort: 8080
            name: assignment-port
          volumeMounts:
            - name: secret-value-volume
              readOnly: true
              mountPath: "/etc/secret-volume"
            - name: config-volume
              readOnly: true
              mountPath: "/config"
            - name: volume-mount
              mountPath: "/usr/share/volume"
          env:
          - name: envValue
            value: "environmentSnake"
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 600m
      volumes:
        - name: secret-value-volume
          secret:
            secretName: set-secret
        - name: config-volume
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: set-config
            # An array of keys from the ConfigMap to create as files
            # When left blank as they are now, that means they will be key as filename, and value as contents.
            items:
        - name: volume-mount
          persistentVolumeClaim:
            claimName: save-storage-claim
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: assignment-3-autoscaler
  namespace: aryan20
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: assignment03-set
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 30
---
apiVersion: v1
kind: Service
metadata:
  name: jboss-service
  namespace: aryan20
  labels:
    app: comp4016-docker-assignment
spec:
  ports:
  - port: 30000 # Needs to be 30000, as that is the endpoint expected in the end.
    protocol: TCP
    #nodePort: 30000 # Only when we're using NodePort as the Service type.
    targetPort: assignment-port # The target port - as I understand, relevant if we want to only allow specific ports to be accessed, as in this case.
  selector:
    app: comp4016-docker-assignment
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: set-config
  namespace: aryan20
data:  
  configValue: "snake"

  # file-like keys
#  server.config: |
#    enemy.types=aliens,monsters
#    player.maximum-lives=5    
#  user-interface.properties: |
#    color.good=purple
#    color.bad=yellow
#    allow.textmode=true    
